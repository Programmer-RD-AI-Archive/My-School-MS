{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport AddTodo from \"./components/addTodo\";\nimport Header from \"./components/header\";\nimport SandBox from \"./components/sandbox\";\nimport TodoItem from \"./components/todoItem\";\nexport default function App() {\n  var _useState = useState([{\n    text: \"buy coffee\",\n    key: \"1\"\n  }, {\n    text: \"create an app\",\n    key: \"2\"\n  }, {\n    text: \"play on the switch\",\n    key: \"3\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var pressHandler = function pressHandler(key) {\n    setTodos(function (prevTodos) {\n      return prevTodos.filter(function (todo) {\n        return todo.key != key;\n      });\n    });\n  };\n\n  var submitHandler = function submitHandler(text) {\n    if (text.length >= 3) {\n      setTodos(function (prevTodos) {\n        return [{\n          text: text,\n          key: Math.random().toString()\n        }].concat(_toConsumableArray(prevTodos));\n      });\n    } else {\n      Alert.alert(\"OOPS!\", \"Todos must be over 3 characters long\", [{\n        text: \"UnderStood\",\n        onPress: function onPress() {\n          return console.log(\"alert closed\");\n        }\n      }]);\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    }\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Header, null), React.createElement(View, {\n    style: styles.content\n  }, React.createElement(AddTodo, {\n    submitHandler: submitHandler\n  }), React.createElement(View, {\n    style: styles.list\n  }, React.createElement(FlatList, {\n    data: todos,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TodoItem, {\n        item: item,\n        pressHandler: pressHandler\n      });\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  content: {\n    flex: 1,\n    padding: 40\n  },\n  list: {\n    flex: 1,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["/media/indika/Sync/Programming/Projects/Python/All/My-School-MS/Other/Todo-App-React-Native/App.js"],"names":["React","useState","AddTodo","Header","SandBox","TodoItem","App","text","key","todos","setTodos","pressHandler","prevTodos","filter","todo","submitHandler","length","Math","random","toString","Alert","alert","onPress","console","log","Keyboard","dismiss","styles","container","content","list","item","StyleSheet","create","flex","backgroundColor","padding","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAUA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA0BL,QAAQ,CAAC,CACjC;AAAEM,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,GAAG,EAAE;AAA3B,GADiC,EAEjC;AAAED,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,GAAG,EAAE;AAA9B,GAFiC,EAGjC;AAAED,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,GAAG,EAAE;AAAnC,GAHiC,CAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,GAAD,EAAS;AAC5BE,IAAAA,QAAQ,CAAC,UAACE,SAAD,EAAe;AACtB,aAAOA,SAAS,CAACC,MAAV,CAAiB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACN,GAAL,IAAYA,GAAtB;AAAA,OAAjB,CAAP;AACD,KAFO,CAAR;AAGD,GAJD;;AAKA,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACR,IAAD,EAAU;AAC9B,QAAIA,IAAI,CAACS,MAAL,IAAe,CAAnB,EAAsB;AACpBN,MAAAA,QAAQ,CAAC,UAACE,SAAD,EAAe;AACtB,gBAAQ;AAAEL,UAAAA,IAAI,EAAEA,IAAR;AAAcC,UAAAA,GAAG,EAAES,IAAI,CAACC,MAAL,GAAcC,QAAd;AAAnB,SAAR,4BAA0DP,SAA1D;AACD,OAFO,CAAR;AAGD,KAJD,MAIO;AACLQ,MAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,sCAArB,EAA6D,CAC3D;AAAEd,QAAAA,IAAI,EAAE,YAAR;AAAsBe,QAAAA,OAAO,EAAE;AAAA,iBAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAAA;AAA/B,OAD2D,CAA7D;AAGD;AACF,GAVD;;AAWA,SAEE,oBAAC,wBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,QAAQ,CAACC,OAAT;AACD;AAHH,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,MAAD,OADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACE,oBAAC,OAAD;AAAS,IAAA,aAAa,EAAEd;AAAxB,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACG;AAApB,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAErB,KADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGsB,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAsB,QAAA,YAAY,EAAEpB;AAApC,QADU;AAAA;AAFd,IADF,CAFF,CAFF,CALF,CAFF;AAuBD;AAED,IAAMgB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BN,EAAAA,OAAO,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPE,IAAAA,OAAO,EAAE;AAFF,GALsB;AAS/BN,EAAAA,IAAI,EAAE;AACJI,IAAAA,IAAI,EAAE,CADF;AAEJG,IAAAA,SAAS,EAAE;AAFP;AATyB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  FlatList,\n  Text,\n  Alert,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport AddTodo from \"./components/addTodo\";\nimport Header from \"./components/header\";\nimport SandBox from \"./components/sandbox\";\nimport TodoItem from \"./components/todoItem\";\n\nexport default function App() {\n  const [todos, setTodos] = useState([\n    { text: \"buy coffee\", key: \"1\" },\n    { text: \"create an app\", key: \"2\" },\n    { text: \"play on the switch\", key: \"3\" },\n  ]);\n  const pressHandler = (key) => {\n    setTodos((prevTodos) => {\n      return prevTodos.filter((todo) => todo.key != key);\n    });\n  };\n  const submitHandler = (text) => {\n    if (text.length >= 3) {\n      setTodos((prevTodos) => {\n        return [{ text: text, key: Math.random().toString() }, ...prevTodos];\n      });\n    } else {\n      Alert.alert(\"OOPS!\", \"Todos must be over 3 characters long\", [\n        { text: \"UnderStood\", onPress: () => console.log(\"alert closed\") },\n      ]);\n    }\n  };\n  return (\n    // <SandBox />\n    <TouchableWithoutFeedback\n      onPress={() => {\n        Keyboard.dismiss();\n      }}\n    >\n      <View style={styles.container}>\n        <Header />\n        <View style={styles.content}>\n          <AddTodo submitHandler={submitHandler} />\n          <View style={styles.list}>\n            <FlatList\n              data={todos}\n              renderItem={({ item }) => (\n                <TodoItem item={item} pressHandler={pressHandler} />\n              )}\n            />\n          </View>\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  content: {\n    flex: 1,\n    padding: 40,\n  },\n  list: {\n    flex: 1,\n    marginTop: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}